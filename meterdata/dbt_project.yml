
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'meterdata'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'meterdata'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  meterdata:
    # Staging layer: source data preparation with hash keys
    staging:
      +materialized: view
      +schema: staging

    # Raw Vault: Data Vault 2.0 core structures
    raw_vault:
      +schema: raw_vault
      +table_type: iceberg
      hubs:
        +materialized: incremental
        +incremental_strategy: merge
        +table_properties:
          format: 'parquet'
      links:
        +materialized: incremental
        +incremental_strategy: merge
        +table_properties:
          format: 'parquet'
      satellites:
        +materialized: incremental
        +incremental_strategy: merge
        +table_properties:
          format: 'parquet'
      references:
        +materialized: table
        +table_properties:
          format: 'parquet'

    # Business Vault: denormalized views for consumption
    business_vault:
      +materialized: view
      +schema: business_vault
