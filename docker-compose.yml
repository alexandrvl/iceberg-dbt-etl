version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: iceberg-dbt-postgres
    environment:
      POSTGRES_USER: dbt_user
      POSTGRES_PASSWORD: dbt_password
      POSTGRES_DB: iceberg_dbt
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth=md5"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
      - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbt_user -d iceberg_dbt"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: iceberg-dbt-minio
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create default bucket on startup
  createbuckets:
    image: minio/mc
    container_name: iceberg-dbt-createbuckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minio_user minio_password;
      /usr/bin/mc mb --ignore-existing myminio/iceberg-data;
      exit 0;
      "
      

  trino:
    image: trinodb/trino:latest
    container_name: iceberg-dbt-trino
    ports:
      - "8081:8080"
    volumes:
      - ./trino/etc:/etc/trino
    depends_on:
      - postgres
      - minio
      - createbuckets
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/info"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Parquet data loader - extracts data from Postgres to S3 and registers with Iceberg
  parquet-loader:
    build:
      context: .
      dockerfile: Dockerfile.parquet-loader
    container_name: iceberg-dbt-parquet-loader
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: iceberg_dbt
      POSTGRES_USER: dbt_user
      POSTGRES_PASSWORD: dbt_password
      S3_REGION: eu-central-1
      S3_ACCESS_KEY: minio_user
      S3_SECRET_KEY: minio_password
      S3_ENDPOINT: minio:9000
      S3_BUCKET: iceberg-data
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      createbuckets:
        condition: service_completed_successfully
      trino:
        condition: service_healthy
    restart: "no"  # Run once unless manually restarted

  # DBT models - transforms data in the data warehouse
  dbt-models:
    build:
      context: .
      dockerfile: Dockerfile.dbt
    container_name: iceberg-dbt-models
    environment:
      DBT_TARGET: prod
      DBT_TRINO_HOST: trino
      DBT_TRINO_PORT: 8080
      DBT_TRINO_USER: trino
      DBT_TRINO_PASSWORD: ""
      DBT_TRINO_DATABASE: iceberg
      DBT_TRINO_SCHEMA: readings
      DBT_THREADS: 1
    depends_on:
      parquet-loader:
        condition: service_completed_successfully
      trino:
        condition: service_healthy
    restart: "no"  # Run once unless manually restarted
    command: ["dbt", "run", "--profiles-dir", "/app/meterdata"]

volumes:
  postgres_data:
  minio_data: